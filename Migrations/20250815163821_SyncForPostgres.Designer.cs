// <auto-generated />
using System;
using DATN_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DATN_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250815163821_SyncForPostgres")]
    partial class SyncForPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DATN_API.Models.SaveData", b =>
                {
                    b.Property<int>("SaveDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SaveDataId"));

                    b.Property<float>("Health")
                        .HasColumnType("real");

                    b.Property<int?>("LastCheckpointID")
                        .HasColumnType("integer");

                    b.Property<string>("LastCheckpointScene")
                        .HasColumnType("text");

                    b.Property<float>("MaxHealth")
                        .HasColumnType("real");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SaveDataId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SaveDatas");
                });

            modelBuilder.Entity("DATN_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DATN_API.Models.SaveData", b =>
                {
                    b.HasOne("DATN_API.Models.User", "User")
                        .WithMany("SaveData")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATN_API.Models.User", b =>
                {
                    b.Navigation("SaveData");
                });
#pragma warning restore 612, 618
        }
    }
}
